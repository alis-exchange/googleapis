// source: google/iam/v2/deny.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_type_expr_pb = require('../../../google/type/expr_pb.js');
goog.object.extend(proto, google_type_expr_pb);
goog.exportSymbol('proto.google.iam.v2.DenyRule', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.iam.v2.DenyRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.iam.v2.DenyRule.repeatedFields_, null);
};
goog.inherits(proto.google.iam.v2.DenyRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.iam.v2.DenyRule.displayName = 'proto.google.iam.v2.DenyRule';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.iam.v2.DenyRule.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.iam.v2.DenyRule.prototype.toObject = function(opt_includeInstance) {
  return proto.google.iam.v2.DenyRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.iam.v2.DenyRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.iam.v2.DenyRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    deniedPrincipalsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    exceptionPrincipalsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    deniedPermissionsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    exceptionPermissionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    denialCondition: (f = msg.getDenialCondition()) && google_type_expr_pb.Expr.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.iam.v2.DenyRule}
 */
proto.google.iam.v2.DenyRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.iam.v2.DenyRule;
  return proto.google.iam.v2.DenyRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.iam.v2.DenyRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.iam.v2.DenyRule}
 */
proto.google.iam.v2.DenyRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addDeniedPrincipals(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addExceptionPrincipals(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDeniedPermissions(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addExceptionPermissions(value);
      break;
    case 5:
      var value = new google_type_expr_pb.Expr;
      reader.readMessage(value,google_type_expr_pb.Expr.deserializeBinaryFromReader);
      msg.setDenialCondition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.iam.v2.DenyRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.iam.v2.DenyRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.iam.v2.DenyRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.iam.v2.DenyRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeniedPrincipalsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getExceptionPrincipalsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getDeniedPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getExceptionPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDenialCondition();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_type_expr_pb.Expr.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string denied_principals = 1;
 * @return {!Array<string>}
 */
proto.google.iam.v2.DenyRule.prototype.getDeniedPrincipalsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.setDeniedPrincipalsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.addDeniedPrincipals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.clearDeniedPrincipalsList = function() {
  return this.setDeniedPrincipalsList([]);
};


/**
 * repeated string exception_principals = 2;
 * @return {!Array<string>}
 */
proto.google.iam.v2.DenyRule.prototype.getExceptionPrincipalsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.setExceptionPrincipalsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.addExceptionPrincipals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.clearExceptionPrincipalsList = function() {
  return this.setExceptionPrincipalsList([]);
};


/**
 * repeated string denied_permissions = 3;
 * @return {!Array<string>}
 */
proto.google.iam.v2.DenyRule.prototype.getDeniedPermissionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.setDeniedPermissionsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.addDeniedPermissions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.clearDeniedPermissionsList = function() {
  return this.setDeniedPermissionsList([]);
};


/**
 * repeated string exception_permissions = 4;
 * @return {!Array<string>}
 */
proto.google.iam.v2.DenyRule.prototype.getExceptionPermissionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.setExceptionPermissionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.addExceptionPermissions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.clearExceptionPermissionsList = function() {
  return this.setExceptionPermissionsList([]);
};


/**
 * optional google.type.Expr denial_condition = 5;
 * @return {?proto.google.type.Expr}
 */
proto.google.iam.v2.DenyRule.prototype.getDenialCondition = function() {
  return /** @type{?proto.google.type.Expr} */ (
    jspb.Message.getWrapperField(this, google_type_expr_pb.Expr, 5));
};


/**
 * @param {?proto.google.type.Expr|undefined} value
 * @return {!proto.google.iam.v2.DenyRule} returns this
*/
proto.google.iam.v2.DenyRule.prototype.setDenialCondition = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.iam.v2.DenyRule} returns this
 */
proto.google.iam.v2.DenyRule.prototype.clearDenialCondition = function() {
  return this.setDenialCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.iam.v2.DenyRule.prototype.hasDenialCondition = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.google.iam.v2);
